C251 COMPILER V5.60.0,  park                                                               17/07/23  20:28:18  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE park
OBJECT MODULE PLACED IN .\Out_File\park.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE park.c XSMALL ROM(HUGE) WARNINGLEVEL(3) BROWSE INCDIR(..\..\Libraries\
                    -libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DEBUG 
                    -PRINT(.\Out_File\park.lst) OBJECT(.\Out_File\park.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "park.h"
    3          
    4          int Start_Flag = 1; //为1则发车出库
    5          int XJ = 0;
    6          int garage_out_direction = 1; //出库方向 -1左出库 1右出库
    7          int Hall = 0;
    8          int roundcount_k = 0, roundcount2_k = 0;
    9          
   10          int CK_count = 0;
   11          int CK_count2 = 0;
   12          
   13          
   14          void CHUKU()
   15          {       
   16   1              if(Start_Flag==1 && CK_count2>=0 && CK_count2<=1100)
   17   1              {
   18   2                      if(garage_out_direction == 1)
   19   2                      {
   20   3                              cha_err1 = +70;
   21   3                              Target_speed1 =150;//右轮
   22   3                              Target_speed2 =180;//右轮
   23   3                      }
   24   2                      else if(garage_out_direction == -1)
   25   2                      {
   26   3                              cha_err1 = -70;
   27   3                              Target_speed1 =180;//右轮
   28   3                              Target_speed2 =150;//右轮
   29   3                      }
   30   2              }
   31   1              
   32   1              else if(Start_Flag == 1)
   33   1              {
   34   2                      XJ=1;
   35   2              }
   36   1              
   37   1      }
   38          
   39          void RuKu()
   40          {
   41   1              roundcount = (ctimer_count_read(CTIM0_P34)+ctimer_count_read(CTIM3_P04))*0.15;
   42   1              roundcount2 = roundcount2 + roundcount;
   43   1              if(roundcount2>=0 && roundcount2<=1000) //1300
   44   1              {
   45   2                      BEEP = 1;
   46   2                      Target_speed1 = -50;
   47   2                      Target_speed2 = -50;
   48   2                      cha_err1 = 0;
   49   2              }
   50   1              else
   51   1              {
   52   2                      roundcount_k = (ctimer_count_read(CTIM0_P34)+ctimer_count_read(CTIM3_P04))*0.15;
   53   2                      roundcount2_k = roundcount2_k + roundcount_k;
   54   2              
   55   2                      if(roundcount2_k>=0 && roundcount2_k<=4000)
   56   2                      {
   57   3                              Target_speed1 = -50;
C251 COMPILER V5.60.0,  park                                                               17/07/23  20:28:18  PAGE 2   

   58   3                              Target_speed2 = -50;
   59   3                              BEEP = 1;
   60   3                      }
   61   2                      else
   62   2                      {
   63   3                              mpu660_angle();
   64   3                              if(abs(angle) <= 80)
   65   3                              {
   66   4                                      Target_speed1 = 70;
   67   4                                      Target_speed2 = 70;
   68   4                                      if(garage_out_direction == 1)
   69   4                                      {
   70   5                                              cha_err1 = 72;
   71   5                                      }
   72   4                                      else if(garage_out_direction == -1)
   73   4                                      {
   74   5                                              cha_err1= -72;
   75   5                                      }
   76   4                              }
   77   3                              else
   78   3                              {
   79   4                                      BEEP = 0;
   80   4                                      Target_speed1 = 0;
   81   4                                      Target_speed2 = 0;
   82   4                                      cha_err1 = 0;
   83   4                              }
   84   3                      }
   85   2              }               
   86   1      }
   87          
   88          
   89          //跑两圈控制变量还原函数
   90          int park_number = 0;
   91          void Re_Start()
   92          {
   93   1              roundcount = (ctimer_count_read(CTIM0_P34)+ctimer_count_read(CTIM3_P04))*0.15;
   94   1              roundcount2 = roundcount2 + roundcount;
   95   1              Ordinary_trace();
   96   1              if(roundcount2 > 1000)
   97   1              {
   98   2                      Hall = 0;
   99   2                      roundcount2 = 0;
  100   2                      round_number = 0;
  101   2                      obstacle_number = 0;
  102   2                      park_number++;
  103   2              }
  104   1      }
  105          
  106          
  107          
  108          //isr:
  109          
  110          //      else if(Hall==1)
  111          //      {       
  112          //              if(park_number == 1)
  113          //              {
  114          //                      Re_Start();
  115          //              }
  116          //              else if(park_number == 2)
  117          //              {
  118          //                      RuKu();
  119          //              }
  120          //      } 


Module Information          Static   Overlayable
------------------------------------------------
C251 COMPILER V5.60.0,  park                                                               17/07/23  20:28:18  PAGE 3   

  code size            =    ------     ------
  ecode size           =       470     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        18     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        54     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
