C251 COMPILER V5.60.0,  isr                                                                27/06/23  14:18:26  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\isr.c LARGE INTR2 ROM(HUGE) WARNINGLEVEL(3) BROWSE INCDIR(
                    -..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\
                    -USER\src) DEBUG PRINT(.\Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj) 

stmt  level    source

    1          ///******************************************************************************************************
             -***************
    2          // * COPYRIGHT NOTICE
    3          // * Copyright (c) 2020,逐飞科技
    4          // * All rights reserved.
    5          // * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6          // *
    7          // * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8          // * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9          // *
   10          // * @file          isr
   11          // * @company       成都逐飞科技有限公司
   12          // * @author        逐飞科技(QQ790875685)
   13          // * @version       查看doc内version文件 版本说明
   14          // * @Software      MDK FOR C251 V5.60
   15          // * @Target core   STC32G12K128
   16          // * @Taobao        https://seekfree.taobao.com/
   17          // * @date          2020-4-14
   18          // ******************************************************************************************************
             -**************/
   19          #include "headfile.h"
   20          
   21          
   22          //UART1中断
   23          void UART1_Isr() interrupt 4
   24          {
   25   1          uint8 res;
   26   1        static uint8 dwon_count;
   27   1          if(UART1_GET_TX_FLAG)
   28   1          {
   29   2              UART1_CLEAR_TX_FLAG;
   30   2              busy[1] = 0;
   31   2          }
   32   1          if(UART1_GET_RX_FLAG)
   33   1          {
   34   2              UART1_CLEAR_RX_FLAG;
   35   2              res = SBUF;
   36   2              //程序自动下载
   37   2              if(res == 0x7F)
   38   2              {
   39   3                  if(dwon_count++ > 20)
   40   3                      IAP_CONTR = 0x60;
   41   3              }
   42   2              else
   43   2              {
   44   3                  dwon_count = 0;
   45   3              }
   46   2          }
   47   1      }
   48          
   49          //UART2中断
   50          void UART2_Isr() interrupt 8
   51          {
   52   1          if(UART2_GET_TX_FLAG)
   53   1        {
   54   2              UART2_CLEAR_TX_FLAG;
   55   2          busy[2] = 0;
C251 COMPILER V5.60.0,  isr                                                                27/06/23  14:18:26  PAGE 2   

   56   2        }
   57   1          if(UART2_GET_RX_FLAG)
   58   1        {
   59   2              UART2_CLEAR_RX_FLAG;
   60   2          //接收数据寄存器为：S2BUF
   61   2      
   62   2        }
   63   1      }
   64          
   65          
   66          //UART3中断
   67          void UART3_Isr() interrupt 17
   68          {
   69   1          if(UART3_GET_TX_FLAG)
   70   1        {
   71   2              UART3_CLEAR_TX_FLAG;
   72   2          busy[3] = 0;
   73   2        }
   74   1          if(UART3_GET_RX_FLAG)
   75   1        {
   76   2              UART3_CLEAR_RX_FLAG;
   77   2          //接收数据寄存器为：S3BUF
   78   2      
   79   2        }
   80   1      }
   81          
   82          
   83          //UART4中断
   84          void UART4_Isr() interrupt 18
   85          {
   86   1          if(UART4_GET_TX_FLAG)
   87   1        {
   88   2              UART4_CLEAR_TX_FLAG;
   89   2          busy[4] = 0;
   90   2        }
   91   1          if(UART4_GET_RX_FLAG)
   92   1        {
   93   2              UART4_CLEAR_RX_FLAG;
   94   2      
   95   2          //接收数据寄存器为：S4BUF;
   96   2          if(wireless_type == WIRELESS_SI24R1)
   97   2              {
   98   3                  wireless_uart_callback();           //无线转串口回调函数
   99   3              }
  100   2              else if(wireless_type == WIRELESS_CH9141)
  101   2              {
  102   3                  bluetooth_ch9141_uart_callback();   //蓝牙转串口回调函数
  103   3              }
  104   2              else if(wireless_type == WIRELESS_CH573)
  105   2              {
  106   3                  wireless_ch573_callback();          //CH573无线模块回调函数
  107   3              }
  108   2        }
  109   1      }
  110          
  111          #define LED P52
  112          void INT0_Isr() interrupt 0
  113          {
  114   1        LED = 0;  //点亮LED
  115   1      }
  116          void INT1_Isr() interrupt 2
  117          {
  118   1      
  119   1      }
  120          void INT2_Isr() interrupt 10
  121          {
C251 COMPILER V5.60.0,  isr                                                                27/06/23  14:18:26  PAGE 3   

  122   1        INT2_CLEAR_FLAG;  //清除中断标志
  123   1      }
  124          void INT3_Isr() interrupt 11
  125          {
  126   1        INT3_CLEAR_FLAG;  //清除中断标志
  127   1      }
  128          
  129          void INT4_Isr() interrupt 16
  130          {
  131   1        INT4_CLEAR_FLAG;  //清除中断标志
  132   1      }
  133          
  134          void TM0_Isr() interrupt 1
  135          {
  136   1      
  137   1      }
  138          void TM1_Isr() interrupt 3
  139          {
  140   1      
  141   1      }
  142          void TM2_Isr() interrupt 12
  143          {
  144   1        TIM2_CLEAR_FLAG;  //清除中断标志
  145   1        
  146   1      }
  147          void TM3_Isr() interrupt 19
  148          {
  149   1        TIM3_CLEAR_FLAG; //清除中断标志
  150   1        
  151   1      }
  152          
  153          int count=0;
  154          int start1=0;
  155          int flag1=0;
  156          void TM4_Isr() interrupt 20
  157          {
  158   1        TIM4_CLEAR_FLAG; //清除中断标志
  159   1        dl1a_get_distance ();
  160   1        mpu660_PID();
  161   1        knn();
  162   1        DirectionControl();
  163   1        CK_count =(ctimer_count_read(CTIM0_P34)+ctimer_count_read(CTIM3_P04))*0.1;
  164   1        CK_count2 = CK_count + CK_count2;
  165   1        
  166   1        CHUKU();
  167   1        
  168   1        if(XJ==1)
  169   1        {
  170   2        
  171   2        if(dl1a_distance_mm<=650&&g_ValueOfAD[2]>=40&&g_ValueOfAD[3]>=40&&dl1a_distance_mm>=100&&flag_hd_Z ==2)
  172   2          {
  173   3           HD=1;
  174   3          
  175   3          }
  176   2        if(P26==0)
  177   2        {
  178   3        Hall=1;
  179   3        
  180   3        } 
  181   2        else if(Hall==1)
  182   2         {
  183   3          RuKu();
  184   3         } 
  185   2         else if(HD==1)
  186   2         {
  187   3         
C251 COMPILER V5.60.0,  isr                                                                27/06/23  14:18:26  PAGE 4   

  188   3         obstacle();
  189   3         } 
  190   2        else
  191   2        {
  192   3         if(flag_r_hd==1)
  193   3         {
  194   4           Huan_Dao_R();
  195   4         }
  196   3          else if(flag_hd_Z==1)
  197   3          {
  198   4         Huan_Dao_Z();
  199   4          }
  200   3         else
  201   3           
  202   3        {
  203   4          Huan_Dao_Z();
  204   4        dir_pid();
  205   4       }
  206   3        }
  207   2      }
  208   1        read_encoder();
  209   1        Target_speed();
  210   1        speedR_pid();
  211   1        speedL_pid();
  212   1        Control();
  213   1        servo  = 692 - cha_err1;
  214   1        if(servo>=765) servo=765;
  215   1        if(servo<=621) servo=621;
  216   1        pwm_duty(PWMB_CH1_P74, servo); 
  217   1        
  218   1        
  219   1      
  220   1        }
  221          
  222          
  223          
  224          
  225          
  226          //void  INT0_Isr()  interrupt 0;
  227          //void  TM0_Isr()   interrupt 1;
  228          //void  INT1_Isr()  interrupt 2;
  229          //void  TM1_Isr()   interrupt 3;
  230          //void  UART1_Isr() interrupt 4;
  231          //void  ADC_Isr()   interrupt 5;
  232          //void  LVD_Isr()   interrupt 6;
  233          //void  PCA_Isr()   interrupt 7;
  234          //void  UART2_Isr() interrupt 8;
  235          //void  SPI_Isr()   interrupt 9;
  236          //void  INT2_Isr()  interrupt 10;
  237          //void  INT3_Isr()  interrupt 11;
  238          //void  TM2_Isr()   interrupt 12;
  239          //void  INT4_Isr()  interrupt 16;
  240          //void  UART3_Isr() interrupt 17;
  241          //void  UART4_Isr() interrupt 18;
  242          //void  TM3_Isr()   interrupt 19;
  243          //void  TM4_Isr()   interrupt 20;
  244          //void  CMP_Isr()   interrupt 21;
  245          //void  I2C_Isr()   interrupt 24;
  246          //void  USB_Isr()   interrupt 25;
  247          //void  PWM1_Isr()  interrupt 26;
  248          //void  PWM2_Isr()  interrupt 27;


Module Information          Static   Overlayable
------------------------------------------------
  code size            =        56     ------
  ecode size           =       720     ------
C251 COMPILER V5.60.0,  isr                                                                27/06/23  14:18:26  PAGE 5   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         7     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        21     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
