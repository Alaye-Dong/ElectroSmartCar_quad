C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE key
OBJECT MODULE PLACED IN .\Out_File\key.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE key.c LARGE INTR2 ROM(HUGE) WARNINGLEVEL(3) BROWSE INCDIR(..\..\Librar
                    -ies\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DE
                    -BUG PRINT(.\Out_File\key.lst) TABS(2) OBJECT(.\Out_File\key.obj) 

stmt  level    source

    1          #include "key.h"
    2          
    3          //¶¨Òå°´¼üÒý½Å
    4          #define KEY1_PIN    P71//P71
    5          #define KEY2_PIN    P70//P70  
    6          #define KEY3_PIN    P72
    7          #define KEY4_PIN    P73
    8          //¶¨Òå²¦Âë¿ª¹ØÒý½Å
    9          #define SW1_PIN    P76
   10          #define SW2_PIN     P75
   11          //¶¨Òå°´¼ü´úºÅ
   12          #define KeystrokeONE 1
   13          #define KeystrokeTWO 2
   14          #define KeystrokeTHREE 3
   15          #define KeystrokeFOUR 4
   16          
   17          //²¦Âë¿ª¹Ø×´Ì¬±äÁ¿ ONÎª0
   18          uint8 sw1_status;
   19          uint8 sw2_status;
   20          
   21          //¿ª¹Ø×´Ì¬±äÁ¿
   22          uint8 key1_status = 1;
   23          uint8 key2_status = 1;
   24          uint8 key3_status = 1;
   25          uint8 key4_status = 1;
   26          
   27          //ÉÏÒ»´Î¿ª¹Ø×´Ì¬±äÁ¿
   28          uint8 key1_last_status;
   29          uint8 key2_last_status;
   30          uint8 key3_last_status;
   31          uint8 key4_last_status;
   32          
   33          //¿ª¹Ø±êÖ¾Î»
   34          uint8 key1_flag;
   35          uint8 key2_flag;
   36          uint8 key3_flag;
   37          uint8 key4_flag;
   38          
   39          uint8 key1_count;
   40          uint8 key2_count;
   41          uint8 key3_count;
   42          uint8 key4_count;
   43          
   44          uint8 test1=0,test2=0,test3=0,test4=0;
   45          uint8 param1_1, param1_2, param3 , param4 = 0;
   46          
   47          int Dispay_Codename = 0;       //ÏÔÊ¾Ò³Ãæ´úºÅ
   48          int This_Codename = 0;      //±¾Ò³Ãæ±àºÅ
   49          uint8 KeystrokeLabel = 0;     //°´Ñ¹×´Ì¬
   50          uint8 CursorRow= 0; //¹â±êËùÔÚÐÐºÅ
   51          uint8 MenuNextFlag = 0; //¹â±êËùÖ¸²Ëµ¥½øÈë±êÖ¾Î»
   52          
   53          void Keystroke_Scan(void)
   54          {
   55   1      
   56   1          //»ñÈ¡²¦Âë¿ª¹Ø×´Ì¬
   57   1          sw1_status = SW1_PIN;
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 2   

   58   1          sw2_status = SW2_PIN;
   59   1      
   60   1          //Ê¹ÓÃ´Ë·½·¨ÓÅµãÔÚÓÚ£¬²»ÐèÒªÊ¹ÓÃwhile(1) µÈ´ý£¬±ÜÃâ´¦ÀíÆ÷×ÊÔ´ÀË·Ñ
   61   1          //±£´æ°´¼ü×´Ì¬
   62   1          key1_last_status = key1_status;
   63   1          key2_last_status = key2_status;
   64   1          key3_last_status = key3_status;
   65   1          key4_last_status = key4_status;
   66   1          //¶ÁÈ¡µ±Ç°°´¼ü×´Ì¬
   67   1          key1_status = KEY1_PIN;
   68   1          key2_status = KEY2_PIN;
   69   1          key3_status = KEY3_PIN;
   70   1          key4_status = KEY4_PIN;
   71   1      
   72   1      
   73   1          //¼ì²âµ½°´¼ü°´ÏÂÖ®ºó  ²¢·Å¿ªÖÃÎ»±êÖ¾Î»
   74   1          if(key1_status && !key1_last_status)    key1_flag = 1;
   75   1          if(key2_status && !key2_last_status)    key2_flag = 1;
   76   1          if(key3_status && !key3_last_status)    key3_flag = 1;
   77   1          if(key4_status && !key4_last_status)    key4_flag = 1;
   78   1      
   79   1          //±êÖ¾Î»ÖÃÎ»Ö®ºó£¬¿ÉÒÔÊ¹ÓÃ±êÖ¾Î»Ö´ÐÐ×Ô¼ºÏëÒª×öµÄÊÂ¼þ
   80   1          KeystrokeLabel = 0;
   81   1          if(key1_flag)   
   82   1          {
   83   2              key1_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
   84   2              KeystrokeLabel = 1;
   85   2              key1_count++;
   86   2          }
   87   1      
   88   1          if(key2_flag)   
   89   1          {
   90   2              key2_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
   91   2              KeystrokeLabel = 2;
   92   2              key2_count++;
   93   2          }
   94   1      
   95   1          if(key3_flag)   
   96   1          {
   97   2              key3_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
   98   2              KeystrokeLabel = 3;
   99   2              key3_count++;
  100   2          }
  101   1      
  102   1          if(key4_flag)   
  103   1          {
  104   2              key4_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
  105   2              KeystrokeLabel = 4;
  106   2              key4_count++;
  107   2          }
  108   1      
  109   1      }
  110          
  111          //-------------------------------------------------------------------------------------------------------
             -------------
  112          //  @brief      ²Ëµ¥Ä¿Â¼
  113          //  @param
  114          //  @param
  115          //  @param
  116          //  @param
  117          //  @return     void
  118          //  @note       ÆôÓÃwhileÀ´ÏÔÊ¾Ä¿±êÒ³Ãæ  ÔÚÃ¿¸öÒ³Ãæ°´¼ü°´¼üºó¶¼»á¸Ä±äµ½¶ÔÓ¦Ò³Ãæ£¬´Ëº¯ÊýÓÃÓÚ¸üÐÂÆÁÄ»ÏÔÊ¾
  119          //-------------------------------------------------------------------------------------------------------
             -------------
  120          void Keystroke_Menu(void)
  121          {
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 3   

  122   1          switch(Dispay_Codename)
  123   1          {
  124   2              case 0:
  125   2                Keystroke_Menu_HOME();
  126   2                break;
  127   2                
  128   2                
  129   2              case 1:
  130   2                Keystroke_Menu_ONE(); 
  131   2                break;
  132   2              case 11:
  133   2                Keystroke_Menu_ONE_One();
  134   2                break;
  135   2              case 12:
  136   2                Keystroke_Menu_ONE_Two();
  137   2                break;
  138   2              case 13:
  139   2                Keystroke_Menu_ONE_Three();
  140   2                break;
  141   2              case 14:
  142   2                Keystroke_Menu_ONE_Four();
  143   2                break;
  144   2                
  145   2              case 2:
  146   2                Keystroke_Menu_TWO();
  147   2                break;
  148   2              case 21:
  149   2                Keystroke_Menu_TWO_One();
  150   2                break;
  151   2                
  152   2              case 3:
  153   2                Keystroke_Menu_THREE();
  154   2                break;
  155   2              case 31:
  156   2                Keystroke_Menu_THREE_One();
  157   2                break;
  158   2              case 32:
  159   2                Keystroke_Menu_THREE_Two();
  160   2                break;
  161   2              case 33:
  162   2                Keystroke_Menu_THREE_Three();
  163   2                break;
  164   2              case 34:
  165   2                Keystroke_Menu_THREE_Four();
  166   2                break;
  167   2                
  168   2              case 4:
  169   2                Keystroke_Menu_FOUR();
  170   2                break;
  171   2          
  172   2          }
  173   1          
  174   1      }
  175          
  176          void Cursor(void)
  177          {   
  178   1          int i;
  179   1          MenuNextFlag = 0;
  180   1          
  181   1          while(MenuNextFlag == 0)
  182   1          {   
  183   2              Keystroke_Scan();
  184   2          
  185   2              if (KeystrokeLabel == 1)
  186   2              {
  187   3                  CursorRow--;
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 4   

  188   3                  for (i = 0; i < 10; i++)
  189   3                  {
  190   4                  if(i == CursorRow)
  191   4                  lcd_showstr(0, CursorRow, ">");
  192   4                  else
  193   4                  lcd_showstr(0, i, " ");
  194   4                  }
  195   3              }
  196   2              
  197   2              if (KeystrokeLabel == 2)
  198   2              {
  199   3                  CursorRow++;
  200   3                  for (i = 0; i < 10; i++)
  201   3                  {
  202   4                  if(i == CursorRow)
  203   4                  lcd_showstr(0, CursorRow, ">");
  204   4                  else
  205   4                  lcd_showstr(0, i, " ");
  206   4                  }
  207   3              }
  208   2              
  209   2              if (KeystrokeLabel == 3)
  210   2              {
  211   3                  //CursorRow = 0;
  212   3                  MenuNextFlag = 1;
  213   3              }
  214   2              
  215   2              if (KeystrokeLabel == 4)
  216   2              {
  217   3                  MenuNextFlag = -1;
  218   3              }
  219   2              
  220   2          }
  221   1          
  222   1      }
  223                  
  224          void KeystrokeLabel_Switch(float change_unit, uint8 value_bit)  //temp_value, ÉÏÒ»Ò³£¬ +-µÄµ¥Î»Öµ, ÉÈÇø´æ´
             -¢µÄÎ»ÖÃ±àºÅ
  225          {   
  226   1          static float tem_value;
  227   1          lcd_showfloat(11*8,6,tem_value,2,2);
  228   1      
  229   1          iap_read_bytes(0x00, date_buff, 100);   //´ÓEEPROMÖÐ¶ÁÈ¡Êý¾Ý
  230   1          Motor_Kp_L      = read_float(0);
  231   1          Motor_Ki_L      = read_float(1);
  232   1          Motor_Kp_R      = read_float(2);
  233   1          Motor_Ki_R      = read_float(3);
  234   1          angle_kp1       = read_float(4);
  235   1          ZX_kp           = read_float(5);
  236   1          ZX_kd           = read_float(6);
  237   1          g_dirControl_P  = read_float(7);
  238   1          g_dirControl_D  = read_float(8);    
  239   1      
  240   1          Keystroke_Scan();
  241   1          if (sw1_status == 0)
  242   1          {
  243   2            change_unit *= 10; 
  244   2          }
  245   1          switch(KeystrokeLabel)
  246   1          {
  247   2            case 0 :
  248   2                Dispay_Codename = This_Codename;
  249   2                break;
  250   2                
  251   2            case KeystrokeONE :
  252   2                tem_value += change_unit; 
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 5   

  253   2                save_float(tem_value,value_bit);
  254   2                Dispay_Codename = This_Codename;    
  255   2                break;
  256   2            case KeystrokeTWO :
  257   2                tem_value -= change_unit;     
  258   2                save_float(tem_value,value_bit);
  259   2                Dispay_Codename = This_Codename;    
  260   2                break;
  261   2                
  262   2            case KeystrokeTHREE :
  263   2                Dispay_Codename /= 10; //·µ»ØÉÏÒ»Ò³
  264   2                lcd_clear(WHITE);
  265   2                break;
  266   2            case KeystrokeFOUR :
  267   2                Dispay_Codename = 0;  //·µ»ØµÚ0Ò³
  268   2                lcd_clear(WHITE);
  269   2                break;
  270   2          }
  271   1      }
  272          
  273          //-------------------------------------------------------------------------------------------------------
             -------------
  274          //  @brief      ×Ü²Ëµ¥Ä¿Â¼
  275          //  @param
  276          //  @param
  277          //  @param
  278          //  @param
  279          //  @return     void
  280          //  @note       ´ËÒ³ÃæÎª±àºÅÎª0
  281          //-------------------------------------------------------------------------------------------------------
             -------------
  282          void Keystroke_Menu_HOME(void)    //0
  283          {
  284   1          lcd_showstr(1*8,1,"Speed");
  285   1          lcd_showstr(1*8,2,"Angle");
  286   1          lcd_showstr(1*8,3,"Direction");
  287   1          lcd_showstr(1*8,4,"Electrical");
  288   1          Cursor(); 
  289   1      
  290   1          switch(CursorRow)
  291   1          {
  292   2              case 0 :
  293   2                  Dispay_Codename = 0;
  294   2                  break;
  295   2                  
  296   2              case 1 :
  297   2                  Dispay_Codename = 1;
  298   2                  lcd_clear(WHITE);
  299   2                  CursorRow = 0;
  300   2                  break;
  301   2              case 2 :
  302   2                  Dispay_Codename = 2;
  303   2                  lcd_clear(WHITE);
  304   2                  CursorRow = 0;
  305   2                  break;
  306   2              case 3 :
  307   2                  Dispay_Codename = 3;
  308   2                  lcd_clear(WHITE);
  309   2                  CursorRow = 0;
  310   2                  break;
  311   2              case 4 :
  312   2                  Dispay_Codename = 4;
  313   2                  lcd_clear(WHITE);
  314   2                  CursorRow = 0;
  315   2                  break;
  316   2          }
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 6   

  317   1      }
  318          
  319          void Keystroke_Menu_ONE(void) //1
  320          {   
  321   1          lcd_showstr(1*8,1,"Mot_Kp_L");
  322   1          lcd_showstr(1*8,2,"Mot_Ki_L");
  323   1          lcd_showstr(1*8,3,"Mot_Kp_R");
  324   1          lcd_showstr(1*8,4,"Mot_Ki_R");
  325   1          
  326   1          lcd_showfloat(11*8,1,Motor_Kp_L,2,2);
  327   1          lcd_showfloat(11*8,2,Motor_Ki_L,2,2);
  328   1          lcd_showfloat(11*8,3,Motor_Kp_R,2,2);
  329   1          lcd_showfloat(11*8,4,Motor_Ki_R,2,2);
  330   1          
  331   1          Cursor();
  332   1          
  333   1          if (MenuNextFlag == -1)
  334   1          {
  335   2              CursorRow = -1;
  336   2          }
  337   1          
  338   1          switch(CursorRow)
  339   1          {   
  340   2              case -1 :
  341   2                  Dispay_Codename = 0;
  342   2                  lcd_clear(WHITE);
  343   2                  break;
  344   2              case 0 :
  345   2                  Dispay_Codename = 1;
  346   2                  break;
  347   2                  
  348   2              case 1 :
  349   2                  Dispay_Codename = 11;
  350   2                // lcd_clear(WHITE);
  351   2                  break;
  352   2              case 2 :
  353   2                  Dispay_Codename = 12;
  354   2                  lcd_clear(WHITE);
  355   2                  break;
  356   2              case 3 :
  357   2                  Dispay_Codename = 13;
  358   2                  lcd_clear(WHITE);
  359   2                  break;
  360   2              case 4 :
  361   2                  Dispay_Codename = 14;
  362   2                  lcd_clear(WHITE);
  363   2                  break;
  364   2              //case......
  365   2          }
  366   1      
  367   1          
  368   1      }
  369          
  370          void Keystroke_Menu_ONE_One(void)  //11
  371          {   
  372   1          This_Codename = 11;     //±¾Ò³Ãæ±àºÅ
  373   1          
  374   1          lcd_showstr(1*8,1,"Mot_Kp_L"); //&
  375   1          lcd_showstr(1*8,2,"Mot_Ki_L");
  376   1          lcd_showstr(1*8,3,"Mot_Kp_R");
  377   1          lcd_showstr(1*8,4,"Mot_Ki_R");
  378   1          lcd_showstr(0,1,"&"); //&±êÖ¾ÌáÊ¾
  379   1          
  380   1          lcd_showfloat(11*8,1,Motor_Kp_L,2,2); //&
  381   1          lcd_showfloat(11*8,2,Motor_Ki_L,2,2);
  382   1          lcd_showfloat(11*8,3,Motor_Kp_R,2,2);
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 7   

  383   1          lcd_showfloat(11*8,4,Motor_Ki_R,2,2);
  384   1          
  385   1          KeystrokeLabel_Switch(0.01, 0);
  386   1          
  387   1      }
  388          
  389          void Keystroke_Menu_ONE_Two(void)  //12
  390          {   
  391   1        
  392   1          This_Codename = 12;
  393   1          
  394   1          lcd_showstr(1*8,1,"Mot_Kp_L");
  395   1          lcd_showstr(1*8,2,"Mot_Ki_L");   //&  
  396   1          lcd_showstr(1*8,3,"Mot_Kp_R");
  397   1          lcd_showstr(1*8,4,"Mot_Ki_R");
  398   1          lcd_showstr(0,2,"&"); //&±êÖ¾ÌáÊ¾
  399   1          
  400   1          lcd_showfloat(11*8,1,Motor_Kp_L,2,2); 
  401   1          lcd_showfloat(11*8,2,Motor_Ki_L,2,2); //&
  402   1          lcd_showfloat(11*8,3,Motor_Kp_R,2,2);
  403   1          lcd_showfloat(11*8,4,Motor_Ki_R,2,2);
  404   1          
  405   1          KeystrokeLabel_Switch(0.01, 1);
  406   1      }
  407          
  408          void Keystroke_Menu_ONE_Three(void)  //13 
  409          {
  410   1          
  411   1          This_Codename = 13;
  412   1          
  413   1          lcd_showstr(1*8,1,"Mot_Kp_L");
  414   1          lcd_showstr(1*8,2,"Mot_Ki_L");    
  415   1          lcd_showstr(1*8,3,"Mot_Kp_R");    //&
  416   1          lcd_showstr(1*8,4,"Mot_Ki_R");
  417   1          lcd_showstr(0,3,"&"); //&
  418   1          
  419   1          lcd_showfloat(11*8,1,Motor_Kp_L,2,2); 
  420   1          lcd_showfloat(11*8,2,Motor_Ki_L,2,2); 
  421   1          lcd_showfloat(11*8,3,Motor_Kp_R,2,2);//&
  422   1          lcd_showfloat(11*8,4,Motor_Ki_R,2,2);
  423   1          
  424   1          KeystrokeLabel_Switch(0.01, 2);
  425   1      }
  426          
  427          void Keystroke_Menu_ONE_Four(void)  //14
  428          {   
  429   1          static float temp_value;
  430   1          eeprom_init();
  431   1          This_Codename = 14;
  432   1          
  433   1          lcd_showstr(1*8,1,"Mot_Kp_L");
  434   1          lcd_showstr(1*8,2,"Mot_Ki_L");    
  435   1          lcd_showstr(1*8,3,"Mot_Kp_R");
  436   1          lcd_showstr(1*8,4,"Mot_Ki_R");  //&
  437   1          lcd_showstr(0,4,"&"); //&
  438   1          
  439   1          lcd_showfloat(11*8,1,Motor_Kp_L,2,2); 
  440   1          lcd_showfloat(11*8,2,Motor_Ki_L,2,2); 
  441   1          lcd_showfloat(11*8,3,Motor_Kp_R,2,2);
  442   1          lcd_showfloat(11*8,4,Motor_Ki_R,2,2); //&
  443   1          
  444   1          KeystrokeLabel_Switch(0.01, 3);
  445   1      }
  446          
  447          
  448          void Keystroke_Menu_TWO(void) //2
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 8   

  449          {   
  450   1          lcd_showstr(1*8,1,"angle_kp1");
  451   1          lcd_showstr(1*8,2," ");
  452   1          lcd_showstr(1*8,3," ");
  453   1          lcd_showstr(1*8,4," ");
  454   1          
  455   1          lcd_showfloat(11*8,1,angle_kp1,2,2);
  456   1      //    lcd_showfloat(11*8,2, ,2,2);
  457   1      //    lcd_showfloat(11*8,3, ,2,2);
  458   1      //    lcd_showfloat(11*8,4, ,2,2);
  459   1          
  460   1          Cursor();
  461   1          
  462   1          if (MenuNextFlag == -1)
  463   1          {
  464   2              CursorRow = -1;
  465   2          }
  466   1          
  467   1          switch(CursorRow)
  468   1          {   
  469   2              case -1 :
  470   2                  Dispay_Codename = 0;
  471   2                  lcd_clear(WHITE);
  472   2                  break;
  473   2              case 0 :
  474   2                  Dispay_Codename = 2;
  475   2                  break;
  476   2                  
  477   2              case 1 :
  478   2                  Dispay_Codename = 21;
  479   2                // lcd_clear(WHITE);
  480   2                  break;
  481   2              case 2 :
  482   2                  Dispay_Codename = 22;
  483   2                  lcd_clear(WHITE);
  484   2                  break;
  485   2              case 3 :
  486   2                  Dispay_Codename = 23;
  487   2                  lcd_clear(WHITE);
  488   2                  break;
  489   2              case 4 :
  490   2                  Dispay_Codename = 24;
  491   2                  lcd_clear(WHITE);
  492   2                  break;
  493   2              //case......
  494   2          }
  495   1      
  496   1      }
  497          
  498          void Keystroke_Menu_TWO_One(void)  //21   &angle_kp1
  499          {
  500   1      
  501   1          This_Codename = 21;     //±¾Ò³Ãæ±àºÅ
  502   1          
  503   1          lcd_showstr(1*8,1,"angle_kp1"); //&
  504   1          lcd_showstr(1*8,2," ");
  505   1          lcd_showstr(1*8,3," ");
  506   1          lcd_showstr(1*8,4," ");
  507   1          lcd_showstr(0,1,"&"); //&
  508   1          
  509   1          lcd_showfloat(11*8,1,angle_kp1,2,2);
  510   1      //    lcd_showfloat(11*8,2, ,2,2);
  511   1      //    lcd_showfloat(11*8,3, ,2,2);
  512   1      //    lcd_showfloat(11*8,4, ,2,2);
  513   1          
  514   1          KeystrokeLabel_Switch(0.01, 4);
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 9   

  515   1      }   
  516          
  517          void Keystroke_Menu_THREE(void) //3
  518          {   
  519   1          lcd_showstr(1*8,1,"ZX_kp"); 
  520   1          lcd_showstr(1*8,2,"ZX_kd");
  521   1          lcd_showstr(1*8,3,"g_dirControl_P");
  522   1          lcd_showstr(1*8,4,"g_dirControl_D");
  523   1        
  524   1          lcd_showfloat(11*8,1,ZX_kp,2,2); 
  525   1          lcd_showfloat(11*8,2,ZX_kd,2,2);
  526   1          lcd_showfloat(11*8,3,g_dirControl_P,2,2);
  527   1          lcd_showfloat(11*8,4,g_dirControl_D,2,2);
  528   1          
  529   1          Cursor();
  530   1          
  531   1          if (MenuNextFlag == -1)
  532   1          {
  533   2              CursorRow = -1;
  534   2          }
  535   1          
  536   1          switch(CursorRow)
  537   1          {   
  538   2              case -1 :
  539   2                  Dispay_Codename = 0;
  540   2                  lcd_clear(WHITE);
  541   2                  break;
  542   2              case 0 :
  543   2                  Dispay_Codename = 3;
  544   2                  break;
  545   2                  
  546   2              case 1 :
  547   2                  Dispay_Codename = 31;
  548   2                // lcd_clear(WHITE);
  549   2                  break;
  550   2              case 2 :
  551   2                  Dispay_Codename = 32;
  552   2                  lcd_clear(WHITE);
  553   2                  break;
  554   2              case 3 :
  555   2                  Dispay_Codename = 33;
  556   2                  lcd_clear(WHITE);
  557   2                  break;
  558   2              case 4 :
  559   2                  Dispay_Codename = 34;
  560   2                  lcd_clear(WHITE);
  561   2                  break;
  562   2              //case......
  563   2          }
  564   1      
  565   1      }
  566          
  567          void Keystroke_Menu_THREE_One(void)  //31
  568          {
  569   1        
  570   1          This_Codename = 31;     //±¾Ò³Ãæ±àºÅ
  571   1          
  572   1          lcd_showstr(1*8,1,"ZX_kp"); //&
  573   1          lcd_showstr(1*8,2,"ZX_kd");
  574   1          lcd_showstr(1*8,3,"g_dir_P");
  575   1          lcd_showstr(1*8,4,"g_dir_D");
  576   1          lcd_showstr(0,1,"&"); 
  577   1          
  578   1          lcd_showfloat(11*8,1,ZX_kp,2,2); //&
  579   1          lcd_showfloat(11*8,2,ZX_kd,2,2);
  580   1          lcd_showfloat(11*8,3,g_dirControl_P,2,2);
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 10  

  581   1          lcd_showfloat(11*8,4,g_dirControl_D,2,2);
  582   1          
  583   1          KeystrokeLabel_Switch(0.01, 5);
  584   1      }
  585          
  586          void Keystroke_Menu_THREE_Two(void)  //32
  587          {   
  588   1          This_Codename = 32;     //±¾Ò³Ãæ±àºÅ
  589   1          
  590   1          lcd_showstr(1*8,1,"ZX_kp"); 
  591   1          lcd_showstr(1*8,2,"ZX_kd");//&
  592   1          lcd_showstr(1*8,3,"g_dir_P");
  593   1          lcd_showstr(1*8,4,"g_dir_D");
  594   1          lcd_showstr(0,2,"&"); 
  595   1          
  596   1          lcd_showfloat(11*8,1,ZX_kp,2,2); 
  597   1          lcd_showfloat(11*8,2, ZX_kd,2,2);//&
  598   1          lcd_showfloat(11*8,3,g_dirControl_P,2,2);
  599   1          lcd_showfloat(11*8,4,g_dirControl_D,2,2);
  600   1          
  601   1           KeystrokeLabel_Switch(0.01, 6);
  602   1      }
  603          
  604          void Keystroke_Menu_THREE_Three(void)  //33
  605          {   
  606   1          This_Codename = 33;     //±¾Ò³Ãæ±àºÅ
  607   1          
  608   1          lcd_showstr(1*8,1,"ZX_kp"); 
  609   1          lcd_showstr(1*8,2,"ZX_kd");
  610   1          lcd_showstr(1*8,3,"g_dir_P");//&
  611   1          lcd_showstr(1*8,4,"g_dir_D");
  612   1          lcd_showstr(0,3,"&"); //&
  613   1          
  614   1          lcd_showfloat(11*8,1,ZX_kp,2,2); 
  615   1          lcd_showfloat(11*8,2, ZX_kd,2,2);
  616   1          lcd_showfloat(11*8,3,g_dirControl_P,2,2);
  617   1          lcd_showfloat(11*8,4,g_dirControl_D,2,2);
  618   1          
  619   1           KeystrokeLabel_Switch(0.01, 7);
  620   1      }
  621          
  622          void Keystroke_Menu_THREE_Four(void)  //34
  623          {   
  624   1          This_Codename = 34;     //±¾Ò³Ãæ±àºÅ
  625   1          
  626   1          lcd_showstr(1*8,1,"ZX_kp"); 
  627   1          lcd_showstr(1*8,2,"ZX_kd");
  628   1          lcd_showstr(1*8,3,"g_dir_P");
  629   1          lcd_showstr(1*8,4,"g_dir_D");//&
  630   1          lcd_showstr(0,4,"&"); //&
  631   1          
  632   1          lcd_showfloat(11*8,1,ZX_kp,2,2); 
  633   1          lcd_showfloat(11*8,2, ZX_kd,2,2);
  634   1          lcd_showfloat(11*8,3,g_dirControl_P,2,2);
  635   1          lcd_showfloat(11*8,4,g_dirControl_D,2,2);//&
  636   1          
  637   1           KeystrokeLabel_Switch(0.01, 8);
  638   1      }
  639          
  640          void Keystroke_Menu_FOUR(void) //4
  641          {
  642   1          lcd_showfloat(65,1,g_ValueOfAD[0],4,2);   //ÓÒÊú
  643   1          lcd_showfloat(65,2,g_ValueOfAD[1],4,2);  //ÓÒÐ±
  644   1          lcd_showfloat(5,0,g_ValueOfAD[2],4,2);  //×óºá
  645   1          lcd_showfloat(65,0,g_ValueOfAD[3],4,2);  //ÓÒºá
  646   1          lcd_showfloat(5,2,g_ValueOfAD[4],4,2);//×óÐ±
C251 COMPILER V5.60.0,  key                                                                27/06/23  14:18:24  PAGE 11  

  647   1          lcd_showfloat(5,1,g_ValueOfAD[5],4,2);//×óÊú   
  648   1      
  649   1          lcd_showfloat(65,6,servo,4,2);
  650   1          lcd_showfloat(5,7,g_dirControl_P,4,2);
  651   1          lcd_showfloat(65,7,g_dirControl_D,4,2);
  652   1          
  653   1          Keystroke_Scan();
  654   1          switch(KeystrokeLabel)
  655   1          {
  656   2              case 0 :
  657   2                  Dispay_Codename = 4;
  658   2                  break;
  659   2      //        case KeystrokeONE :
  660   2      //            Dispay_Codename = 41;
  661   2      //           lcd_clear(WHITE);
  662   2      //            break;
  663   2      //        case KeystrokeTWO :
  664   2      //            Dispay_Codename = 42;
  665   2      //            lcd_clear(WHITE);
  666   2      //            break;
  667   2      //        case KeystrokeTHREE :
  668   2      //            Dispay_Codename = 43;
  669   2      //            lcd_clear(WHITE);
  670   2      //            break;
  671   2              case KeystrokeFOUR :
  672   2                  Dispay_Codename = 0;    //·µ»ØµÚ0Ò³
  673   2                  lcd_clear(WHITE);
  674   2                  break;
  675   2          }
  676   1      }
  677          
  678          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =      4336     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        41          1
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       229     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
