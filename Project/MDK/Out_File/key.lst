C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE key
OBJECT MODULE PLACED IN .\Out_File\key.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE key.c XSMALL ROM(HUGE) WARNINGLEVEL(3) BROWSE INCDIR(..\..\Libraries\l
                    -ibraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DEBUG P
                    -RINT(.\Out_File\key.lst) OBJECT(.\Out_File\key.obj) 

stmt  level    source

    1          #include "key.h"
    2          
    3          ////¶¨Òå°´¼üÒý½Å
    4          //#define KEY1_PIN    P71
    5          //#define KEY2_PIN    P70       
    6          //#define KEY3_PIN    P72
    7          //#define KEY4_PIN    P73
    8          ////¶¨Òå²¦Âë¿ª¹ØÒý½Å
    9          //#define SW1_PIN                P76
   10          //#define SW2_PIN     P75
   11          
   12          //¶¨Òå°´¼ü´úºÅ
   13          #define KeystrokeONE 1
   14          #define KeystrokeTWO 2
   15          #define KeystrokeTHREE 3
   16          #define KeystrokeFOUR 4
   17          
   18          //²¦Âë¿ª¹Ø×´Ì¬±äÁ¿ ONÎª0
   19          uint8 sw1_status;
   20          uint8 sw2_status;
   21          
   22          //¿ª¹Ø×´Ì¬±äÁ¿
   23          uint8 key1_status = 1;
   24          uint8 key2_status = 1;
   25          uint8 key3_status = 1;
   26          uint8 key4_status = 1;
   27          
   28          //ÉÏÒ»´Î¿ª¹Ø×´Ì¬±äÁ¿
   29          uint8 key1_last_status;
   30          uint8 key2_last_status;
   31          uint8 key3_last_status;
   32          uint8 key4_last_status;
   33          
   34          //¿ª¹Ø±êÖ¾Î»
   35          uint8 key1_flag;
   36          uint8 key2_flag;
   37          uint8 key3_flag;
   38          uint8 key4_flag;
   39          
   40          int Dispay_Codename = 0;       //ÏÔÊ¾Ò³Ãæ´úºÅ
   41          int This_Codename = 0;                  //±¾Ò³Ãæ±àºÅ
   42          uint8 KeystrokeLabel = 0;                       //°´Ñ¹×´Ì¬
   43          uint8 CursorRow= 0; //¹â±êËùÔÚÐÐºÅ
   44          uint8 MenuNextFlag = 0; //¹â±êËùÖ¸²Ëµ¥½øÈë±êÖ¾Î»
   45          uint8 target_value_bit = 0;
   46          
   47          
   48          
   49          void Keystroke_Scan(void)
   50          {
   51   1      
   52   1          //»ñÈ¡²¦Âë¿ª¹Ø×´Ì¬
   53   1          sw1_status = SW1_PIN;
   54   1          sw2_status = SW2_PIN;
   55   1      
   56   1          //Ê¹ÓÃ´Ë·½·¨ÓÅµãÔÚÓÚ£¬²»ÐèÒªÊ¹ÓÃwhile(1) µÈ´ý£¬±ÜÃâ´¦ÀíÆ÷×ÊÔ´ÀË·Ñ
   57   1          //±£´æ°´¼ü×´Ì¬
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 2   

   58   1          key1_last_status = key1_status;
   59   1          key2_last_status = key2_status;
   60   1          key3_last_status = key3_status;
   61   1          key4_last_status = key4_status;
   62   1          //¶ÁÈ¡µ±Ç°°´¼ü×´Ì¬
   63   1          key1_status = KEY1_PIN;
   64   1          key2_status = KEY2_PIN;
   65   1          key3_status = KEY3_PIN;
   66   1          key4_status = KEY4_PIN;
   67   1      
   68   1      
   69   1          //¼ì²âµ½°´¼ü°´ÏÂÖ®ºó  ²¢·Å¿ªÖÃÎ»±êÖ¾Î»
   70   1          if(key1_status && !key1_last_status)    key1_flag = 1;
   71   1          if(key2_status && !key2_last_status)    key2_flag = 1;
   72   1          if(key3_status && !key3_last_status)    key3_flag = 1;
   73   1          if(key4_status && !key4_last_status)    key4_flag = 1;
   74   1      
   75   1          //±êÖ¾Î»ÖÃÎ»Ö®ºó£¬¿ÉÒÔÊ¹ÓÃ±êÖ¾Î»Ö´ÐÐ×Ô¼ºÏëÒª×öµÄÊÂ¼þ
   76   1          KeystrokeLabel = 0;
   77   1          if(key1_flag)   
   78   1          {
   79   2              key1_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
   80   2              KeystrokeLabel = 1;
   81   2          }
   82   1      
   83   1          if(key2_flag)   
   84   1          {
   85   2              key2_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
   86   2              KeystrokeLabel = 2;
   87   2          }
   88   1      
   89   1          if(key3_flag)   
   90   1          {
   91   2              key3_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
   92   2              KeystrokeLabel = 3;
   93   2          }
   94   1      
   95   1          if(key4_flag)   
   96   1          {
   97   2              key4_flag = 0;//Ê¹ÓÃ°´¼üÖ®ºó£¬Ó¦¸ÃÇå³ý±êÖ¾Î»
   98   2              KeystrokeLabel = 4;
   99   2          }
  100   1      
  101   1      }
  102          
  103          
  104          
  105          void Cursor(void)
  106          {               
  107   1          uint8 i;
  108   1          MenuNextFlag = 0;
  109   1      
  110   1          while(MenuNextFlag == 0)
  111   1          {           
  112   2              Keystroke_Scan();
  113   2      
  114   2              switch(KeystrokeLabel)
  115   2              {
  116   3                  case 1:
  117   3                          CursorRow--;
  118   3                          break;                   
  119   3                  case 2:
  120   3                          CursorRow++;
  121   3                          break;                    
  122   3                  case 3:
  123   3                          MenuNextFlag = 1;
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 3   

  124   3                          break;
  125   3                  case 4:
  126   3                          MenuNextFlag = -1;
  127   3                          break;                    
  128   3              }
  129   2              
  130   2              for (i = 0; i < 10; i++)
  131   2              {
  132   3                  if(i == CursorRow)
  133   3                  {
  134   4                      lcd_showstr(0, CursorRow, ">");
  135   4                  }
  136   3                  else
  137   3                  {
  138   4                      lcd_showstr(0, i, " ");
  139   4                  }
  140   3              }
  141   2      
  142   2              //¼ýÍ·ÏÞÎ»
  143   2              if (CursorRow < 0)
  144   2              {
  145   3                  CursorRow= 0;
  146   3              }
  147   2              else if (CursorRow > 9)
  148   2              {
  149   3                  CursorRow= 0;
  150   3              }
  151   2                  
  152   2          }
  153   1                      
  154   1      }
  155                                          
  156          void KeystrokeLabel_Switch(float change_unit, uint8 value_bit)  //temp_value, ÉÏÒ»Ò³£¬ +-µÄµ¥Î»Öµ, ÉÈÇø´æ´
             -¢µÄÎ»ÖÃ±àºÅ
  157          {               
  158   1          static float tem_value;
  159   1          lcd_showfloat(11*8,6,tem_value,2,2);
  160   1          //eeprom_init();
  161   1          iap_read_bytes(0x00, date_buff, 100);               //´ÓEEPROMÖÐ¶ÁÈ¡Êý¾Ý
  162   1          Motor_Kp_L          = read_float(0);
  163   1          Motor_Ki_L          = read_float(1);
  164   1          Motor_Kp_R          = read_float(2);
  165   1          Motor_Ki_R          = read_float(3);
  166   1          angle_kp1           = read_float(4);
  167   1      
  168   1          g_dirControl_P      = read_float(7);
  169   1          g_dirControl_D    = read_float(8);          
  170   1      
  171   1          Keystroke_Scan();
  172   1          
  173   1          if (sw1_status == 0)
  174   1          {
  175   2              change_unit *= 10; 
  176   2          }
  177   1          if (sw1_status == 0 && sw2_status == 0)
  178   1          {
  179   2              change_unit *= 10; 
  180   2          }
  181   1          
  182   1          switch(KeystrokeLabel)
  183   1          {
  184   2              case 0 :
  185   2                      Dispay_Codename = This_Codename;
  186   2                      break;
  187   2                          
  188   2              case KeystrokeONE :
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 4   

  189   2                      tem_value += change_unit;       
  190   2                      save_float(tem_value,value_bit);
  191   2                      Dispay_Codename = This_Codename;                
  192   2                      break;
  193   2              case KeystrokeTWO :
  194   2                      tem_value -= change_unit;                       
  195   2                      save_float(tem_value,value_bit);
  196   2                      Dispay_Codename = This_Codename;                
  197   2                      break;
  198   2                          
  199   2              case KeystrokeTHREE :
  200   2                      Dispay_Codename /= 10; //·µ»ØÉÏÒ»Ò³
  201   2                      lcd_clear(WHITE);
  202   2                      break;
  203   2              case KeystrokeFOUR :
  204   2                      Dispay_Codename = 0;    //·µ»ØµÚ0Ò³
  205   2                      lcd_clear(WHITE);
  206   2                      break;
  207   2          }
  208   1      }
  209          void Keystroke_Special_Value(int* parameter)
  210          {
  211   1          Keystroke_Scan();
  212   1          switch(KeystrokeLabel)
  213   1          {
  214   2              case 0 :
  215   2                      Dispay_Codename = This_Codename;
  216   2                      break;
  217   2                      
  218   2              case KeystrokeONE :
  219   2                      *parameter = -1;
  220   2                      Dispay_Codename = This_Codename;                
  221   2                      break;
  222   2              case KeystrokeTWO :
  223   2                      *parameter = 1;
  224   2                      Dispay_Codename = This_Codename;                
  225   2                      break;
  226   2                      
  227   2              case KeystrokeTHREE :
  228   2                      Dispay_Codename /= 10; //·µ»ØÉÏÒ»Ò³
  229   2                      lcd_clear(WHITE);
  230   2                      break;
  231   2              case KeystrokeFOUR :
  232   2                      Dispay_Codename = 0;    //·µ»ØµÚ0Ò³
  233   2                      lcd_clear(WHITE);
  234   2                      break;
  235   2          }
  236   1      }
  237          
  238          //-------------------------------------------------------------------------------------------------------
             -------------
  239          //  @brief      ²Ëµ¥Ä¿Â¼
  240          //  @param
  241          //  @param
  242          //  @param
  243          //  @param
  244          //  @return     void
  245          //  @note       ÆôÓÃwhileÀ´ÏÔÊ¾Ä¿±êÒ³Ãæ  ÔÚÃ¿¸öÒ³Ãæ°´¼ü°´¼üºó¶¼»á¸Ä±äµ½¶ÔÓ¦Ò³Ãæ£¬´Ëº¯ÊýÓÃÓÚ¸üÐÂÆÁÄ»ÏÔÊ¾
  246          //-------------------------------------------------------------------------------------------------------
             -------------
  247          void Keystroke_Menu(void)
  248          {
  249   1          switch(Dispay_Codename)
  250   1          {
  251   2              case 0:
  252   2                  Keystroke_Menu_HOME();
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 5   

  253   2                  break;
  254   2                  
  255   2              case 1:
  256   2                  Keystroke_Menu_ONE(); 
  257   2                  break;
  258   2              case 11:
  259   2                  Keystroke_Menu_ONE_One();
  260   2                  break;
  261   2              case 12:
  262   2                  Keystroke_Menu_ONE_Two();
  263   2                  break;
  264   2              case 13:
  265   2                  Keystroke_Menu_ONE_Three();
  266   2                  break;
  267   2              case 14:
  268   2                  Keystroke_Menu_ONE_Four();
  269   2                  break;
  270   2                  
  271   2              case 2:
  272   2                  Keystroke_Menu_TWO();
  273   2                  break;
  274   2              case 21:
  275   2                  Keystroke_Menu_TWO_One();
  276   2                  break;
  277   2              case 22:
  278   2                  Keystroke_Menu_TWO_Two();
  279   2                  break;
  280   2              case 23:
  281   2                  Keystroke_Menu_TWO_Three();
  282   2                  break;
  283   2              case 24:
  284   2                  Keystroke_Menu_TWO_Four();
  285   2                  break;
  286   2                  
  287   2              case 3:
  288   2                  Keystroke_Menu_THREE();
  289   2                  break;
  290   2              case 31:
  291   2                  Keystroke_Menu_THREE_One();
  292   2                  break;
  293   2              case 32:
  294   2                  Keystroke_Menu_THREE_Two();
  295   2                  break;
  296   2              case 33:
  297   2                  Keystroke_Menu_THREE_Three();
  298   2                  break;
  299   2              case 34:
  300   2                  Keystroke_Menu_THREE_Four();
  301   2                  break;
  302   2                  
  303   2              case 4:
  304   2                  Keystroke_Menu_FOUR();
  305   2                  break;
  306   2      
  307   2              case 5:
  308   2                  Keystroke_Menu_FIVE();
  309   2                  break;
  310   2              case 51:
  311   2                  Keystroke_Menu_FIVE_One();
  312   2                  break;
  313   2              case 52:
  314   2                  Keystroke_Menu_FIVE_Two();
  315   2                  break;
  316   2              case 53:
  317   2                  Keystroke_Menu_FIVE_Three();
  318   2                  break;
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 6   

  319   2              case 54:
  320   2                  Keystroke_Menu_FIVE_Four();
  321   2                  break;
  322   2          }
  323   1      }
  324          
  325          //-------------------------------------------------------------------------------------------------------
             -------------
  326          //  @brief      ×Ü²Ëµ¥Ä¿Â¼
  327          //  @param
  328          //  @param
  329          //  @param
  330          //  @param
  331          //  @return     void
  332          //  @note       ´ËÒ³ÃæÎª±àºÅÎª0
  333          //-------------------------------------------------------------------------------------------------------
             -------------
  334          void Keystroke_Menu_HOME(void)    //0
  335          {
  336   1          lcd_showstr(1*8,1,"Start");
  337   1          lcd_showstr(1*8,2,"AI_Round");
  338   1          lcd_showstr(1*8,3,"AI_Obstacle");
  339   1          lcd_showstr(1*8,4,"Electrical");
  340   1          lcd_showstr(1*8,5,"PID_Speed");
  341   1          
  342   1          Cursor(); 
  343   1      
  344   1          switch(CursorRow)
  345   1          {
  346   2              case 0 :
  347   2                      Dispay_Codename = 0;
  348   2                      break;
  349   2                                                      
  350   2              case 1 :
  351   2                      Dispay_Codename = 1;
  352   2                      lcd_clear(WHITE);
  353   2                      CursorRow = 0;
  354   2                      break;
  355   2              case 2 :
  356   2                      Dispay_Codename = 2;
  357   2                      lcd_clear(WHITE);
  358   2                      CursorRow = 0;
  359   2                      break;
  360   2              case 3 :
  361   2                      Dispay_Codename = 3;
  362   2                      lcd_clear(WHITE);
  363   2                      CursorRow = 0;
  364   2                      break;
  365   2              case 4 :
  366   2                      Dispay_Codename = 4;
  367   2                      lcd_clear(WHITE);
  368   2                      CursorRow = 0;
  369   2                      break;
  370   2                                      
  371   2              case 5 :
  372   2                      Dispay_Codename = 5;
  373   2                      lcd_clear(WHITE);
  374   2                      CursorRow = 0;
  375   2                      break;
  376   2                                                      
  377   2          }
  378   1      }
  379          /*///////////////////////////////////////
  380              Start
  381          *////////////////////////////////////////
  382          void Menu_ONE_Display(uint8 control_line)
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 7   

  383          {
  384   1          lcd_showstr(1*8,1,"Start_Flag");
  385   1          lcd_showstr(1*8,2,"Out_Direction");
  386   1          //lcd_showstr(1*8,3,"DEBUG_MODE");    
  387   1          lcd_showint32(14*8,1,Start_Flag,1);
  388   1          lcd_showint32(14*8,2,garage_out_direction,1);
  389   1          //lcd_showint32(14*8,3,DEBUG_MODE,1);    
  390   1          lcd_showstr(0,control_line,"&"); //&±êÖ¾ÌáÊ¾
  391   1      }
  392          
  393          void Keystroke_Menu_ONE(void) //1
  394          {               
  395   1          Menu_ONE_Display(-1);
  396   1          Cursor();
  397   1          
  398   1          if (MenuNextFlag == -1)
  399   1          {
  400   2              CursorRow = -1;
  401   2          }
  402   1          
  403   1          switch(CursorRow)
  404   1          {           
  405   2              case -1 :
  406   2                      Dispay_Codename = 0;
  407   2                      lcd_clear(WHITE);
  408   2                      break;
  409   2              case 0 :
  410   2                      Dispay_Codename = 1;
  411   2                      break;
  412   2                      
  413   2              case 1 :
  414   2                      Dispay_Codename = 11;
  415   2                  // lcd_clear(WHITE);
  416   2                      break;
  417   2              case 2 :
  418   2                      Dispay_Codename = 12;
  419   2                      lcd_clear(WHITE);
  420   2                      break;
  421   2              case 3 :
  422   2                      Dispay_Codename = 13;
  423   2                      lcd_clear(WHITE);
  424   2                      break;
  425   2              case 4 :
  426   2                      Dispay_Codename = 14;
  427   2                      lcd_clear(WHITE);
  428   2                      break;
  429   2              //case......
  430   2          }
  431   1      }
  432          
  433          void Keystroke_Menu_ONE_One(void)  //11
  434          {               
  435   1          This_Codename = 11;                 //±¾Ò³Ãæ±àºÅ
  436   1          Menu_ONE_Display(1);
  437   1          Keystroke_Special_Value(&Start_Flag);
  438   1      }
  439          
  440          void Keystroke_Menu_ONE_Two(void)  //12
  441          {               
  442   1          This_Codename = 12;
  443   1          Menu_ONE_Display(2);
  444   1          Keystroke_Special_Value(&garage_out_direction);
  445   1      }
  446          
  447          void Keystroke_Menu_ONE_Three(void)  //13       
  448          {
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 8   

  449   1          This_Codename = 13;
  450   1          Menu_ONE_Display(3);
  451   1          //Keystroke_Special_Value(&DEBUG_MODE);
  452   1      
  453   1      }
  454          
  455          void Keystroke_Menu_ONE_Four(void)  //14
  456          {               
  457   1          This_Codename = 14;
  458   1          Menu_ONE_Display(4);
  459   1                      
  460   1      }
  461          
  462          /*////////////////////////////////////
  463              AI_Round
  464          *////////////////////////////////////
  465          void Menu_TWO_Display(uint8 control_line)
  466          {
  467   1          lcd_showstr(1*8,1,"round1_type");
  468   1          lcd_showstr(1*8,2,"round2_type");
  469   1          lcd_showstr(1*8,3,"round3_type");
  470   1          lcd_showstr(1*8,4,"round4_type");
  471   1          lcd_showstr(1*8,5,"round_num_MAX");
  472   1      
  473   1          lcd_showint32(14*8,1,round1_type,1);
  474   1          lcd_showint32(14*8,2,round2_type,1);
  475   1          lcd_showint32(14*8,3,round3_type,1);
  476   1          lcd_showint32(14*8,4,round4_type,1);
  477   1          lcd_showint32(14*8,5,round_number_MAX,1);
  478   1          
  479   1          lcd_showstr(0,control_line,"&"); //&±êÖ¾ÌáÊ¾
  480   1      }
  481          
  482          void Keystroke_Menu_TWO(void) //2
  483          {               
  484   1          Menu_TWO_Display(-1);
  485   1          Cursor();
  486   1          
  487   1          if (MenuNextFlag == -1)
  488   1          {
  489   2                  CursorRow = -1;
  490   2          }
  491   1          
  492   1          switch(CursorRow)
  493   1          {           
  494   2                  case -1 :
  495   2                          Dispay_Codename = 0;
  496   2                          lcd_clear(WHITE);
  497   2                          break;
  498   2                  case 0 :
  499   2                          Dispay_Codename = 2;
  500   2                          break;
  501   2                          
  502   2                  case 1 :
  503   2                          Dispay_Codename = 21;
  504   2                      // lcd_clear(WHITE);
  505   2                          break;
  506   2                  case 2 :
  507   2                          Dispay_Codename = 22;
  508   2                          lcd_clear(WHITE);
  509   2                          break;
  510   2                  case 3 :
  511   2                          Dispay_Codename = 23;
  512   2                          lcd_clear(WHITE);
  513   2                          break;
  514   2                  case 4 :
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 9   

  515   2                          Dispay_Codename = 24;
  516   2                          lcd_clear(WHITE);
  517   2                          break;
  518   2                          
  519   2                  case 6 :
  520   2                          Dispay_Codename = 26;
  521   2                          lcd_clear(WHITE);
  522   2                          break;
  523   2                  case 7 :
  524   2                          Dispay_Codename = 27;
  525   2                          lcd_clear(WHITE);
  526   2                          break;
  527   2                  case 8 :
  528   2                          Dispay_Codename = 28;
  529   2                          lcd_clear(WHITE);
  530   2                          break;              
  531   2                          
  532   2                  //case......
  533   2          }
  534   1      
  535   1      }
  536          
  537          void Keystroke_Menu_TWO_One(void) //21
  538          {
  539   1          This_Codename = 21;                 //±¾Ò³Ãæ±àºÅ
  540   1          Menu_TWO_Display(1);
  541   1          Keystroke_Special_Value(&round1_type);
  542   1      }
  543          void Keystroke_Menu_TWO_Two(void)  //22
  544          {
  545   1          This_Codename = 22;                 //±¾Ò³Ãæ±àºÅ
  546   1          Menu_TWO_Display(2);
  547   1          Keystroke_Special_Value(&round2_type);
  548   1      }
  549          void Keystroke_Menu_TWO_Three(void)  //23
  550          {
  551   1          This_Codename = 23;                 //±¾Ò³Ãæ±àºÅ
  552   1          Menu_TWO_Display(3);
  553   1          Keystroke_Special_Value(&round3_type);
  554   1      }
  555          void Keystroke_Menu_TWO_Four(void)  //24
  556          {
  557   1          This_Codename = 24;                 //±¾Ò³Ãæ±àºÅ
  558   1          Menu_TWO_Display(4);
  559   1          Keystroke_Special_Value(&round4_type);
  560   1      }
  561          
  562          void Menu_THREE_Display(uint8 control_line)
  563          {
  564   1          lcd_showstr(1*8,1,"obsta1_type");
  565   1          lcd_showstr(1*8,2,"obsta2_type");
  566   1          lcd_showstr(1*8,3,"obsta3_type");
  567   1          lcd_showstr(1*8,4,"obsta_num_MAX");
  568   1          
  569   1          lcd_showint32(14*8,1,obstacle1_type,1);
  570   1          lcd_showint32(14*8,2,obstacle2_type,1);
  571   1          lcd_showint32(14*8,3,obstacle3_type,1);
  572   1          lcd_showint32(14*8,4,obstacle_number_MAX,1);
  573   1      
  574   1          lcd_showstr(0,control_line,"&"); //&±êÖ¾ÌáÊ¾
  575   1      }
  576          
  577          /*/////////////////////////////////
  578              AI_Obstacle1
  579          *//////////////////////////////////
  580          void Keystroke_Menu_THREE(void) //3
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 10  

  581          {               
  582   1                      Menu_THREE_Display(-1);
  583   1                      
  584   1                      Cursor();
  585   1                      
  586   1                      if (MenuNextFlag == -1)
  587   1                      {
  588   2                                      CursorRow = -1;
  589   2                      }
  590   1                      
  591   1                      switch(CursorRow)
  592   1                      {               
  593   2                                      case -1 :
  594   2                                                      Dispay_Codename = 0;
  595   2                                                      lcd_clear(WHITE);
  596   2                                                      break;
  597   2                                      case 0 :
  598   2                                                      Dispay_Codename = 3;
  599   2                                                      break;
  600   2                                                      
  601   2                                      case 1 :
  602   2                                                      Dispay_Codename = 31;
  603   2                                              // lcd_clear(WHITE);
  604   2                                                      break;
  605   2                                      case 2 :
  606   2                                                      Dispay_Codename = 32;
  607   2                                                      lcd_clear(WHITE);
  608   2                                                      break;
  609   2                                      case 3 :
  610   2                                                      Dispay_Codename = 33;
  611   2                                                      lcd_clear(WHITE);
  612   2                                                      break;
  613   2                                      case 4 :
  614   2                                                      Dispay_Codename = 34;
  615   2                                                      lcd_clear(WHITE);
  616   2                                                      break;
  617   2                                      //case......
  618   2                      }
  619   1      
  620   1      }
  621          
  622          void Keystroke_Menu_THREE_One(void)  //31
  623          {
  624   1          This_Codename = 31;                 //±¾Ò³Ãæ±àºÅ
  625   1          Menu_THREE_Display(1);
  626   1          Keystroke_Special_Value(&obstacle1_type);
  627   1      }
  628          
  629          void Keystroke_Menu_THREE_Two(void)  //32
  630          {               
  631   1          This_Codename = 32;                 //±¾Ò³Ãæ±àºÅ
  632   1          Menu_THREE_Display(2);
  633   1          Keystroke_Special_Value(&obstacle2_type);
  634   1      }
  635          
  636          void Keystroke_Menu_THREE_Three(void)  //33
  637          {               
  638   1          This_Codename = 33;                 //±¾Ò³Ãæ±àºÅ
  639   1          Menu_THREE_Display(3);
  640   1          Keystroke_Special_Value(&obstacle3_type);
  641   1      }
  642          
  643          void Keystroke_Menu_THREE_Four(void)  //34
  644          {               
  645   1          This_Codename = 34;                 //±¾Ò³Ãæ±àºÅ
  646   1          Menu_THREE_Display(4);
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 11  

  647   1          
  648   1      }
  649          /*////////////////////////////////
  650              Electrical
  651          *////////////////////////////////
  652          void Keystroke_Menu_FOUR(void) //4
  653          {
  654   1          lcd_showint32(5,0,g_ValueOfAD[0],4);//×óÊú          
  655   1          lcd_showint32(10*8,0,g_ValueOfAD[5],4);   //ÓÒÊú    
  656   1          lcd_showstr(6*8,0,"|05");           
  657   1          lcd_showint32(5,1,g_ValueOfAD[3],4);  //×óºá        
  658   1          lcd_showint32(10*8,1,g_ValueOfAD[2],4);  //ÓÒºá
  659   1          lcd_showstr(6*8,1,"-32"); 
  660   1          lcd_showint32(5,2,g_ValueOfAD[4],4);//      ×óÐ±              
  661   1          lcd_showint32(10*8,2,g_ValueOfAD[1],4);  // ÓÒÐ±
  662   1          lcd_showstr(6*8,2,"/41"); 
  663   1          
  664   1          lcd_showfloat(5,3,Target_speed1,4,0);               
  665   1          lcd_showfloat(5*8,3,servo,3,0);
  666   1          lcd_showfloat(10*8,3,Target_speed2,4,0);
  667   1      
  668   1          lcd_showint32(65,5,roundcount2,5);
  669   1          lcd_showfloat(5,5,roundcount2_k,4,0);
  670   1      
  671   1          lcd_showfloat(5,6,v_angle,4,3); 
  672   1          lcd_showfloat(65,6,angle,4,2); 
  673   1      
  674   1          lcd_showfloat(5,7,y_v_angle,4,3); 
  675   1          lcd_showfloat(65,7,angle_y,4,2);
  676   1          
  677   1          lcd_showint32(5,8,e_r1,5);
  678   1          lcd_showint32(65,8,e_r2,5);
  679   1          
  680   1          lcd_showfloat(5,9,dl1a_distance_mm,4,0);      
  681   1          lcd_showint32(8*8, 9, obstacle_flag, 1);
  682   1          lcd_showint32(10*8, 9, obstacle_number, 1);
  683   1          lcd_showint32(12*8, 9, cross_flag, 1);
  684   1          
  685   1          
  686   1          Keystroke_Scan();
  687   1          switch(KeystrokeLabel)
  688   1          {
  689   2              case 0 :
  690   2                      Dispay_Codename = 4;
  691   2                      break;
  692   2      
  693   2              case KeystrokeFOUR :
  694   2                      Dispay_Codename = 0;            //·µ»ØµÚ0Ò³
  695   2                      lcd_clear(WHITE);
  696   2                      break;
  697   2          }
  698   1      }
  699          
  700          /*//////////////////////////////////
  701              PID_Speed
  702          *//////////////////////////////////
  703          void Menu_FIVE_Display(uint8 control_line)
  704          {
  705   1          lcd_showstr(1*8,1,"gd_P"); 
  706   1          lcd_showfloat(65,1,g_dirControl_P,2,3);
  707   1          lcd_showstr(1*8,2,"gd_D"); 
  708   1          lcd_showfloat(65,2,g_dirControl_D,2,3);
  709   1      
  710   1          lcd_showstr(1*8,3,"normalS"); 
  711   1          lcd_showint32(65,3,normal_speed, 3);
  712   1          lcd_showstr(1*8,4,"round_S"); 
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 12  

  713   1          lcd_showint32(65,4,round_speed, 3);
  714   1          lcd_showstr(1*8,9,"servo"); 
  715   1          lcd_showfloat(65,9,servo,3,0);
  716   1          
  717   1          lcd_showstr(0,control_line,"&"); //&±êÖ¾ÌáÊ¾
  718   1      }
  719          
  720          void Keystroke_Menu_FIVE(void) //5
  721          {               
  722   1          Menu_FIVE_Display(-1);              
  723   1          Cursor();
  724   1          
  725   1          if (MenuNextFlag == -1)
  726   1          {
  727   2                  CursorRow = -1;
  728   2          }
  729   1          
  730   1          switch(CursorRow)
  731   1          {           
  732   2              case -1 :
  733   2                      Dispay_Codename = 0;
  734   2                      lcd_clear(WHITE);
  735   2                      break;
  736   2              case 0 :
  737   2                      Dispay_Codename = 5;
  738   2                      break;
  739   2                      
  740   2              case 1 :
  741   2                      Dispay_Codename = 51;
  742   2                      lcd_clear(WHITE);
  743   2                      break;
  744   2              case 2 :
  745   2                      Dispay_Codename = 52;
  746   2                      lcd_clear(WHITE);
  747   2                      break;
  748   2              case 3 :
  749   2                      Dispay_Codename = 53;
  750   2                      lcd_clear(WHITE);
  751   2                      break;
  752   2              case 4 :
  753   2                      Dispay_Codename = 54;
  754   2                      lcd_clear(WHITE);
  755   2                      break;
  756   2              //case......
  757   2          }
  758   1      
  759   1      }
  760          
  761          void Keystroke_Menu_FIVE_One(void)  //51
  762          {
  763   1          float change_unit = 0.001;
  764   1          This_Codename = 51;                 //±¾Ò³Ãæ±àºÅ
  765   1          Menu_FIVE_Display(1);               
  766   1      
  767   1          Keystroke_Scan();
  768   1          if (sw1_status == 0)
  769   1          {
  770   2              change_unit = 0.01; 
  771   2          }
  772   1          if (sw1_status == 0 && sw2_status == 0)
  773   1          {
  774   2              change_unit = 0.1; 
  775   2          }
  776   1      
  777   1          switch(KeystrokeLabel)
  778   1          {
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 13  

  779   2              case 0 :
  780   2                      Dispay_Codename = This_Codename;
  781   2                      break;
  782   2                      
  783   2              case KeystrokeONE :
  784   2                      g_dirControl_P += change_unit;  
  785   2                      Dispay_Codename = This_Codename;                
  786   2                      break;
  787   2              case KeystrokeTWO :
  788   2                      g_dirControl_P -= change_unit;                  
  789   2                      Dispay_Codename = This_Codename;                
  790   2                      break;
  791   2                              
  792   2              case KeystrokeTHREE :
  793   2                  Dispay_Codename /= 10; //·µ»ØÉÏÒ»Ò³
  794   2                  lcd_clear(WHITE);
  795   2                  break;
  796   2              case KeystrokeFOUR :
  797   2                  Dispay_Codename = 0;        //·µ»ØµÚ0Ò³
  798   2                  lcd_clear(WHITE);
  799   2                  break;
  800   2          }
  801   1      
  802   1      }
  803          
  804          void Keystroke_Menu_FIVE_Two(void)  //52
  805          {
  806   1                      float change_unit = 0.001;
  807   1                      This_Codename = 52;                     //±¾Ò³Ãæ±àºÅ
  808   1                      Menu_FIVE_Display(2);           
  809   1                      Keystroke_Scan();
  810   1                      if (sw1_status == 0)
  811   1                      {
  812   2                              change_unit = 0.01; 
  813   2                      }
  814   1                      if (sw1_status == 0 && sw2_status == 0)
  815   1                      {
  816   2                              change_unit = 0.1; 
  817   2                      }
  818   1      
  819   1                      switch(KeystrokeLabel)
  820   1          {
  821   2              case 0 :
  822   2                                                      Dispay_Codename = This_Codename;
  823   2                                                      break;
  824   2                                                      
  825   2                                      case KeystrokeONE :
  826   2                                                      g_dirControl_D += change_unit;  
  827   2                                                      Dispay_Codename = This_Codename;                
  828   2                                                      break;
  829   2              case KeystrokeTWO :
  830   2                                                      g_dirControl_D -= change_unit;                  
  831   2                                                      Dispay_Codename = This_Codename;                
  832   2                                                      break;
  833   2                                                      
  834   2              case KeystrokeTHREE :
  835   2                  Dispay_Codename /= 10; //·µ»ØÉÏÒ»Ò³
  836   2                  lcd_clear(WHITE);
  837   2                  break;
  838   2              case KeystrokeFOUR :
  839   2                  Dispay_Codename = 0;        //·µ»ØµÚ0Ò³
  840   2                  lcd_clear(WHITE);
  841   2                  break;
  842   2          }
  843   1      }
  844          
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 14  

  845          void Keystroke_Menu_FIVE_Three(void)  //53
  846          {
  847   1                      float change_unit = 0.001;
  848   1                      This_Codename = 53;                     //±¾Ò³Ãæ±àºÅ
  849   1                      Menu_FIVE_Display(3);                   
  850   1                      Keystroke_Scan();
  851   1                      if (sw1_status == 0)
  852   1                      {
  853   2                              change_unit = 0.01; 
  854   2                      }
  855   1                      if (sw1_status == 0 && sw2_status == 0)
  856   1                      {
  857   2                              change_unit = 0.1; 
  858   2                      }
  859   1      
  860   1                      switch(KeystrokeLabel)
  861   1          {
  862   2              case 0 :
  863   2                                                      Dispay_Codename = This_Codename;
  864   2                                                      break;
  865   2                                                      
  866   2      //                              case KeystrokeONE :
  867   2      //                                              g_fDirectionError_2_proportion_1 += change_unit;        
  868   2      //                                              Dispay_Codename = This_Codename;                
  869   2      //                                              break;
  870   2      //        case KeystrokeTWO :
  871   2      //                                              g_fDirectionError_2_proportion_1 -= change_unit;                        
  872   2      //                                              Dispay_Codename = This_Codename;                
  873   2      //                                              break;
  874   2                                                      
  875   2              case KeystrokeTHREE :
  876   2                  Dispay_Codename /= 10; //·µ»ØÉÏÒ»Ò³
  877   2                  lcd_clear(WHITE);
  878   2                  break;
  879   2              case KeystrokeFOUR :
  880   2                  Dispay_Codename = 0;        //·µ»ØµÚ0Ò³
  881   2                  lcd_clear(WHITE);
  882   2                  break;
  883   2          }
  884   1      }
  885          
  886          void Keystroke_Menu_FIVE_Four(void)  //54
  887          {
  888   1                      float change_unit = 0.001;
  889   1                      This_Codename = 54;                     //±¾Ò³Ãæ±àºÅ
  890   1                      Menu_FIVE_Display(4);           
  891   1                      
  892   1              
  893   1                      Keystroke_Scan();
  894   1                      if (sw1_status == 0)
  895   1                      {
  896   2                              change_unit = 0.01; 
  897   2                      }
  898   1                      if (sw1_status == 0 && sw2_status == 0)
  899   1                      {
  900   2                              change_unit = 0.1; 
  901   2                      }
  902   1      
  903   1                      switch(KeystrokeLabel)
  904   1          {
  905   2              case 0 :
  906   2                                                      Dispay_Codename = This_Codename;
  907   2                                                      break;
  908   2                                                      
  909   2      //                              case KeystrokeONE :
  910   2      //                                              g_fDirectionError_2_proportion_2 += change_unit;        
C251 COMPILER V5.60.0,  key                                                                23/07/23  00:26:13  PAGE 15  

  911   2      //                                              Dispay_Codename = This_Codename;                
  912   2      //                                              break;
  913   2      //        case KeystrokeTWO :
  914   2      //                                              g_fDirectionError_2_proportion_2 -= change_unit;                        
  915   2      //                                              Dispay_Codename = This_Codename;                
  916   2      //                                              break;
  917   2                                                      
  918   2              case KeystrokeTHREE :
  919   2                  Dispay_Codename /= 10; //·µ»ØÉÏÒ»Ò³
  920   2                  lcd_clear(WHITE);
  921   2                  break;
  922   2              case KeystrokeFOUR :
  923   2                  Dispay_Codename = 0;        //·µ»ØµÚ0Ò³
  924   2                  lcd_clear(WHITE);
  925   2                  break;
  926   2          }
  927   1      }
*** WARNING C183 IN LINE 847 OF key.c: dead assignment eliminated
*** WARNING C183 IN LINE 853 OF key.c: dead assignment eliminated
*** WARNING C183 IN LINE 857 OF key.c: dead assignment eliminated
*** WARNING C183 IN LINE 888 OF key.c: dead assignment eliminated
*** WARNING C183 IN LINE 896 OF key.c: dead assignment eliminated
*** WARNING C183 IN LINE 900 OF key.c: dead assignment eliminated


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =      3630     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        26          1
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       287     ------
End of Module Information.


C251 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
